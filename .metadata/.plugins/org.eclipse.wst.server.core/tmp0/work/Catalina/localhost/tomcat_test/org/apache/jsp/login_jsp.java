/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.30
 * Generated at: 2020-01-30 06:31:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


  String contextPath = request.getContextPath();
  String errMsg = (String) request.getAttribute("errMsg");
  if (errMsg == null) {
    errMsg = "";
  }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( contextPath);
      out.write("/wstyle.css\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("      function check() {\r\n");
      out.write("        var errMsg = \"\";\r\n");
      out.write("        if (document.loginform.username.value == \"\") {\r\n");
      out.write("          errMsg += \"・ユーザーIDが未入力です。\\n\";\r\n");
      out.write("        }\r\n");
      out.write("        if (document.loginform.password.value == \"\") {\r\n");
      out.write("          errMsg += \"・パスワードが未入力です。\\n\";\r\n");
      out.write("        }\r\n");
      out.write("        var ret = false;\r\n");
      out.write("        if (errMsg != \"\") {\r\n");
      out.write("          document.getElementById(\"emsg\").innerText = errMsg;\r\n");
      out.write("          ;\r\n");
      out.write("          document.getElementById(\"sv-emsg\").innerText = \"\";\r\n");
      out.write("          ret = false;\r\n");
      out.write("        }\r\n");
      out.write("        else {\r\n");
      out.write("          // OK\r\n");
      out.write("          ret = true;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        return ret;\r\n");
      out.write("      }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    <title>面談結果登録システム</title>\r\n");
      out.write("\r\n");
      out.write("  </head>\r\n");
      out.write("  <body class=\"formBgColor\" onLoad=\"document.loginform.username.focus()\">\r\n");
      out.write("    <table width=\"100%\" height=\"400\" border=\"0\">\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td align=\"center\">\r\n");
      out.write("\r\n");
      out.write("          <br/><br/><br/>\r\n");
      out.write("\r\n");
      out.write("          <table class=\"loginTitleWidth\">\r\n");
      out.write("            <tr>\r\n");
      out.write("              <td>\r\n");
      out.write("                <font class=\"titleFont\">面談結果登録システム</font>\r\n");
      out.write("              </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("              <td>\r\n");
      out.write("                <font class=\"titleFont\">ログイン画面</font>\r\n");
      out.write("              </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("          </table>\r\n");
      out.write("\r\n");
      out.write("          <br/><br/><br/>\r\n");
      out.write("\r\n");
      out.write("          <table class=\"loginMsgWidth\">\r\n");
      out.write("            <tr>\r\n");
      out.write("              <td align=\"left\">\r\n");
      out.write("                <div class=\"c_red\" id=\"sv-emsg\">");
      out.print( errMsg);
      out.write("</div>\r\n");
      out.write("                <div class=\"c_red\" id=\"emsg\"></div>\r\n");
      out.write("              </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("          </table>\r\n");
      out.write("          <form method=\"post\" action=\"");
      out.print( contextPath);
      out.write("/LoginServlet\" name=\"login\" onSubmit=\"return check();\">\r\n");
      out.write("            <table class=\"fullb0\">\r\n");
      out.write("              <tr>\r\n");
      out.write("                <td align=\"center\">\r\n");
      out.write("                  <table class=\"loginWidth\">\r\n");
      out.write("                    <tr>\r\n");
      out.write("                      <td align=\"left\" width=\"100%\">\r\n");
      out.write("                        <font class=\"normalFont\">ユーザーID</font>\r\n");
      out.write("                      </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                      <td align=\"left\" width=\"100%\">\r\n");
      out.write("                        <input type=\"text\" name=\"username\" size=\"38\">\r\n");
      out.write("                      </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                      <td align=\"left\" width=\"100%\">\r\n");
      out.write("                        <br/>\r\n");
      out.write("                      </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                      <td align=\"left\" width=\"100%\">\r\n");
      out.write("                        <font class=\"normalFont\">パスワード</font>\r\n");
      out.write("                      </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                      <td align=\"left\" width=\"100%\">\r\n");
      out.write("                        <input type=\"password\" name=\"password\" size=\"38\">\r\n");
      out.write("                      </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                      <td align=\"left\" width=\"100%\">\r\n");
      out.write("                        <br/>\r\n");
      out.write("                      </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                      <td align=\"center\">\r\n");
      out.write("                        <br/>\r\n");
      out.write("                        <input type=\"submit\"\r\n");
      out.write("                               value=\"ログイン\"\r\n");
      out.write("                               style=\"background-color:#cc9900;\"\r\n");
      out.write("                               onmouseover=\"this.style.fontWeight = '900'\"\r\n");
      out.write("                               onmouseout=\"this.style.fontWeight = 'normal'\">\r\n");
      out.write("                      </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                  </table>\r\n");
      out.write("                </td>\r\n");
      out.write("              </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("          </form>\r\n");
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
